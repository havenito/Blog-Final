security:
    # Gestion des hashers de mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Fournisseurs d'utilisateurs
    providers:
        # Charge les utilisateurs depuis la base de données via l'entité User
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            # Configuration pour le formulaire de connexion
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                username_parameter: email # Correspond au champ "email" dans le formulaire
                password_parameter: password # Correspond au champ "password" dans le formulaire
                default_target_path: main
                

            # Configuration pour la déconnexion
            logout:
                path: app_logout
                target: main
                

            # Autres configurations possibles pour ce firewall
            # switch_user: true

    # Contrôle des accès
    access_control:
        # Exemples d'accès :
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
